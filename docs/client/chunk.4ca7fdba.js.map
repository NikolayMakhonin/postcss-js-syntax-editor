{"version":3,"file":"chunk.4ca7fdba.js","sources":["../../../node_modules/json5/lib/unicode.js","../../../node_modules/json5/lib/parse.js","../../../node_modules/json5/lib/util.js","../../../node_modules/json5/lib/stringify.js","../../../node_modules/json5/lib/index.js","../../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../../src/components/CodeMirror.svelte","../../../src/main/browser/helpers/web-worker-runner.js","../../../node_modules/svelte-extras/dist/svelte-extras.es.js","../../../src/components/JsCssConverter.svelte"],"sourcesContent":["// This is a generated file. Do not edit.\nmodule.exports.Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/\nmodule.exports.ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/\nmodule.exports.ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n","const util = require('./util')\n\nlet source\nlet parseState\nlet stack\nlet pos\nlet line\nlet column\nlet token\nlet key\nlet root\n\nmodule.exports = function parse (text, reviver) {\n    source = String(text)\n    parseState = 'start'\n    stack = []\n    pos = 0\n    line = 1\n    column = 0\n    token = undefined\n    key = undefined\n    root = undefined\n\n    do {\n        token = lex()\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]()\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n}\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name]\n    if (value != null && typeof value === 'object') {\n        for (const key in value) {\n            const replacement = internalize(value, key, reviver)\n            if (replacement === undefined) {\n                delete value[key]\n            } else {\n                value[key] = replacement\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState\nlet buffer\nlet doubleQuote\nlet sign\nlet c\n\nfunction lex () {\n    lexState = 'default'\n    buffer = ''\n    doubleQuote = false\n    sign = 1\n\n    for (;;) {\n        c = peek()\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]()\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek()\n\n    if (c === '\\n') {\n        line++\n        column = 0\n    } else if (c) {\n        column += c.length\n    } else {\n        column++\n    }\n\n    if (c) {\n        pos += c.length\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read()\n            return\n\n        case '/':\n            read()\n            lexState = 'comment'\n            return\n\n        case undefined:\n            read()\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read()\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read()\n            lexState = 'multiLineComment'\n            return\n\n        case '/':\n            read()\n            lexState = 'singleLineComment'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read()\n            lexState = 'multiLineCommentAsterisk'\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read()\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read()\n            return\n\n        case '/':\n            read()\n            lexState = 'default'\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read()\n        lexState = 'multiLineComment'\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read()\n            lexState = 'default'\n            return\n\n        case undefined:\n            read()\n            return newToken('eof')\n        }\n\n        read()\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read()\n            literal('ull')\n            return newToken('null', null)\n\n        case 't':\n            read()\n            literal('rue')\n            return newToken('boolean', true)\n\n        case 'f':\n            read()\n            literal('alse')\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1\n            }\n\n            lexState = 'sign'\n            return\n\n        case '.':\n            buffer = read()\n            lexState = 'decimalPointLeading'\n            return\n\n        case '0':\n            buffer = read()\n            lexState = 'zero'\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read()\n            lexState = 'decimalInteger'\n            return\n\n        case 'I':\n            read()\n            literal('nfinity')\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read()\n            literal('aN')\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"')\n            buffer = ''\n            lexState = 'string'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read()\n        const u = unicodeEscape()\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u\n        lexState = 'identifierName'\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read()\n            return\n\n        case '\\\\':\n            read()\n            lexState = 'identifierNameEscape'\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read()\n        const u = unicodeEscape()\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u\n        lexState = 'identifierName'\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read()\n            lexState = 'decimalPointLeading'\n            return\n\n        case '0':\n            buffer = read()\n            lexState = 'zero'\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read()\n            lexState = 'decimalInteger'\n            return\n\n        case 'I':\n            read()\n            literal('nfinity')\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read()\n            literal('aN')\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read()\n            lexState = 'decimalPoint'\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read()\n            lexState = 'hexadecimal'\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read()\n            lexState = 'decimalPoint'\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalFraction'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalFraction'\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read()\n            lexState = 'decimalExponentSign'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalExponentInteger'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalExponentInteger'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read()\n            lexState = 'hexadecimalInteger'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read()\n            buffer += escape()\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read()\n                return newToken('string', buffer)\n            }\n\n            buffer += read()\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read()\n                return newToken('string', buffer)\n            }\n\n            buffer += read()\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c)\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read()\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value'\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read()\n            lexState = 'identifierName'\n            return\n\n        case '\\\\':\n            read()\n            lexState = 'identifierNameStartEscape'\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"')\n            lexState = 'string'\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read()\n            lexState = 'identifierName'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value'\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value'\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n}\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek()\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read()\n    }\n}\n\nfunction escape () {\n    const c = peek()\n    switch (c) {\n    case 'b':\n        read()\n        return '\\b'\n\n    case 'f':\n        read()\n        return '\\f'\n\n    case 'n':\n        read()\n        return '\\n'\n\n    case 'r':\n        read()\n        return '\\r'\n\n    case 't':\n        read()\n        return '\\t'\n\n    case 'v':\n        read()\n        return '\\v'\n\n    case '0':\n        read()\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read()\n        return hexEscape()\n\n    case 'u':\n        read()\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read()\n        return ''\n\n    case '\\r':\n        read()\n        if (peek() === '\\n') {\n            read()\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = ''\n    let c = peek()\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read()\n\n    c = peek()\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read()\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = ''\n    let count = 4\n\n    while (count-- > 0) {\n        const c = peek()\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read()\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push()\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value\n            parseState = 'afterPropertyName'\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop()\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue'\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push()\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop()\n            return\n        }\n\n        push()\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName'\n            return\n\n        case '}':\n            pop()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue'\n            return\n\n        case ']':\n            pop()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n}\n\nfunction push () {\n    let value\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {}\n            break\n\n        case '[':\n            value = []\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value\n    } else {\n        const parent = stack[stack.length - 1]\n        if (Array.isArray(parent)) {\n            parent.push(value)\n        } else {\n            parent[key] = value\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value)\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue'\n        } else {\n            parseState = 'beforePropertyName'\n        }\n    } else {\n        const current = stack[stack.length - 1]\n        if (current == null) {\n            parseState = 'end'\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue'\n        } else {\n            parseState = 'afterPropertyValue'\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop()\n\n    const current = stack[stack.length - 1]\n    if (current == null) {\n        parseState = 'end'\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue'\n    } else {\n        parseState = 'afterPropertyValue'\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`)\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    }\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16)\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message)\n    err.lineNumber = line\n    err.columnNumber = column\n    return err\n}\n","const unicode = require('../lib/unicode')\n\nmodule.exports = {\n    isSpaceSeparator (c) {\n        return unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return /[0-9A-Fa-f]/.test(c)\n    },\n}\n","const util = require('./util')\n\nmodule.exports = function stringify (value, replacer, space) {\n    const stack = []\n    let indent = ''\n    let propertyList\n    let replacerFunc\n    let gap = ''\n    let quote\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space\n        quote = replacer.quote\n        replacer = replacer.replacer\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer\n    } else if (Array.isArray(replacer)) {\n        propertyList = []\n        for (const v of replacer) {\n            let item\n\n            if (typeof v === 'string') {\n                item = v\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v)\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item)\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space)\n    } else if (space instanceof String) {\n        space = String(space)\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space))\n            gap = '          '.substr(0, space)\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10)\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key]\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key)\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key)\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value)\n        }\n\n        if (value instanceof Number) {\n            value = Number(value)\n        } else if (value instanceof String) {\n            value = String(value)\n        } else if (value instanceof Boolean) {\n            value = value.valueOf()\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        }\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        }\n\n        let product = ''\n\n        for (const c of value) {\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++\n                product += c\n                continue\n            }\n\n            if (replacements[c]) {\n                product += replacements[c]\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16)\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length)\n                continue\n            }\n\n            product += c\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b)\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar])\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value)\n\n        let stepback = indent\n        indent = indent + gap\n\n        let keys = propertyList || Object.keys(value)\n        let partial = []\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value)\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':'\n                if (gap !== '') {\n                    member += ' '\n                }\n                member += propertyString\n                partial.push(member)\n            }\n        }\n\n        let final\n        if (partial.length === 0) {\n            final = '{}'\n        } else {\n            let properties\n            if (gap === '') {\n                properties = partial.join(',')\n                final = '{' + properties + '}'\n            } else {\n                let separator = ',\\n' + indent\n                properties = partial.join(separator)\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}'\n            }\n        }\n\n        stack.pop()\n        indent = stepback\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0))\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value)\n\n        let stepback = indent\n        indent = indent + gap\n\n        let partial = []\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value)\n            partial.push((propertyString !== undefined) ? propertyString : 'null')\n        }\n\n        let final\n        if (partial.length === 0) {\n            final = '[]'\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',')\n                final = '[' + properties + ']'\n            } else {\n                let separator = ',\\n' + indent\n                let properties = partial.join(separator)\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']'\n            }\n        }\n\n        stack.pop()\n        indent = stepback\n        return final\n    }\n}\n","const parse = require('./parse')\nconst stringify = require('./stringify')\n\nconst JSON5 = {\n    parse,\n    stringify,\n}\n\nmodule.exports = JSON5\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","{#await codemirrorPromise}\n\t<p class='loading'>loading editor...</p>\n{:then _}\n\t<div class='codemirror-container'>\n\t\t<textarea ref:editor></textarea>\n\n\t\t{#if error}\n\t\t\t<p class='error message'>\n\t\t\t\t{#if error.loc}\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t{#if error.filename}\n\t\t\t\t\t\t\t<span class='filename' on:click='fire(\"navigate\", error.filename)'>{error.filename}</span>\n\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t({error.loc.line}:{error.loc.column})\n\t\t\t\t\t</strong>\n\t\t\t\t{/if}\n\n\t\t\t\t{error.message}\n\t\t\t</p>\n\t\t{:elseif warningCount > 0}\n\t\t\t<p class='warning message'>\n\t\t\t\tCompiled, but with {warningCount} {warningCount === 1 ? 'warning' : 'warnings'} — check the console for details\n\t\t\t</p>\n\t\t{/if}\n\t</div>\n{:catch err}\n\t<p class='error'>error loading CodeMirror</p>\n{/await}\n\n<style>\n\t.codemirror-container {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\n\t\tborder-top: 1px solid #ccc;\n\t\tborder-bottom: 1px solid #ccc;\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\t.codemirror-container :global(.CodeMirror) {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\n\t\tborder-radius: 3px;\n\t\tfont-family: Inconsolata, monospace;\n\t\tfont-size: 16px;\n\t\tline-height: 1.2;\n\t\tfont-weight: 400;\n\t\tcolor: #333;\n\t\theight: auto;\n\t\tmin-height: 60px;\n\t}\n\n\t.codemirror-container :global(.CodeMirror-gutters) {\n\t\tborder-right: 1px solid #eee;\n\t}\n\n\ttextarea {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\n\t\tborder: none;\n\t}\n\n\t.codemirror-container .message {\n\t\tbottom: 1em;\n\t\tleft: 1em;\n\t\tposition: absolute;\n\t\tz-index: 20;\n\t}\n\n\t.codemirror-container :global(.error-loc) {\n\t\tposition: relative;\n\t\tborder-bottom: 2px solid rgb(200,0,0);\n\t}\n\n\t.codemirror-container :global(.error-line) {\n\t\tbackground-color: rgba(200,0,0,0.05);\n\t}\n\n\t.loading, .error {\n\t\ttext-align: center;\n\t\tcolor: #999;\n\t\tfont-weight: 300;\n\t\tmargin: 2em 0 0 0;\n\t}\n</style>\n\n<script>\n\timport {observe} from 'svelte-extras'\n\n\tlet codemirrorPromise\n\n\tfunction loadCodemirror() {\n\t\treturn import('./_codemirror.js')\n\t\t\t.then(m => m.default)\n\t}\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcodemirrorPromise: process.browser\n\t\t\t\t\t? codemirrorPromise || (codemirrorPromise = loadCodemirror())\n\t\t\t\t\t: null\n\t\t\t}\n\t\t},\n\n\t\toncreate() {\n\t\t\tcodemirrorPromise.then(CodeMirror => {\n\t\t\t\tCodeMirror.defaults.smartIndent = false\n\t\t\t\tCodeMirror.keyMap.default['Shift-Tab'] = 'indentLess'\n\t\t\t\tCodeMirror.keyMap.default.Tab = 'indentMore'\n\t\t\t\n\t\t\t\tthis.updating = false\n\n\t\t\t\tthis.observe('mode', () => {\n\t\t\t\t\tthis.createEditor(CodeMirror)\n\t\t\t\t})\n\t\t\t\tthis.observe('code', code => {\n\t\t\t\t\tif (!this.updating && code != null) {\n\t\t\t\t\t\tthis.updating = true\n\t\t\t\t\t\tthis.editor.setValue(code)\n\t\t\t\t\t\tthis.updating = false\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet marker\n\t\t\t\tthis.observe('errorLoc', loc => {\n\t\t\t\t\tif (marker) {\n\t\t\t\t\t\tmarker.clear()\n\t\t\t\t\t}\n\n\t\t\t\t\tif (loc == null) {\n\t\t\t\t\t\tthis.set({errorLine: null})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst line = loc.line - 1\n\t\t\t\t\t\tconst ch = loc.column\n\n\t\t\t\t\t\tmarker = this.editor.markText({line,\n\t\t\t\t\t\t\tch}, {line,\n\t\t\t\t\t\t\tch: ch + 1}, {\n\t\t\t\t\t\t\tclassName: 'error-loc'\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis.set({errorLine: line})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis.observe('errorLine', (line, previousLine) => {\n\t\t\t\t\tif (previousLine != null) {\n\t\t\t\t\t\tthis.editor.removeLineClass(previousLine, 'wrap', 'error-line')\n\t\t\t\t\t}\n\t\t\t\t\tif (line != null) {\n\t\t\t\t\t\tthis.editor.addLineClass(line, 'wrap', 'error-line')\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis.on('destroy', () => {\n\t\t\t\t\tthis.editor.toTextArea()\n\t\t\t\t})\n\t\t\t\tthis.editor.refresh()\n\t\t\t})\n\t\t},\n\n\t\tmethods: {\n\t\t\tcreateEditor(CodeMirror) {\n\t\t\t\tif (this.editor) {\n\t\t\t\t\tthis.editor.toTextArea()\n\t\t\t\t}\n\n\t\t\t\tconst {mode, code, readonly} = this.get()\n\n\t\t\t\tconst modes = {\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tname: 'javascript',\n\t\t\t\t\t\tjson: true\n\t\t\t\t\t},\n\t\t\t\t\thandlebars: {\n\t\t\t\t\t\tname: 'handlebars',\n\t\t\t\t\t\tbase: 'text/html'\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.editor = CodeMirror.fromTextArea(this.refs.editor, {\n\t\t\t\t\tlineNumbers   : true,\n\t\t\t\t\tlineWrapping  : true,\n\t\t\t\t\tindentWithTabs: true,\n\t\t\t\t\tindentUnit    : 2,\n\t\t\t\t\ttabSize       : 2,\n\t\t\t\t\tvalue         : code,\n\t\t\t\t\tmode          : modes[mode] || {\n\t\t\t\t\t\tname: mode\n\t\t\t\t\t},\n\t\t\t\t\treadOnly: readonly\n\t\t\t\t})\n\n\t\t\t\tthis.editor.on('change', instance => {\n\t\t\t\t\tif (!this.updating) {\n\t\t\t\t\t\tthis.updating = true\n\t\t\t\t\t\tthis.set({code: instance.getValue()})\n\t\t\t\t\t\tthis.updating = false\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tresize() {\n\t\t\t\tthis.editor.refresh()\n\t\t\t},\n\n\t\t\tobserve\n\t\t}\n\t}\n</script>","export class WebWorkerRunner {\n\tconstructor() {\n\t\t// eslint-disable-next-line\n\t\tfunction workerCode() {\n\t\t\tonmessage = async function ({data}) {\n\t\t\t\tconst code = data.code\n\t\t\t\tdelete data.code\n\t\t\t\ttry {\n\t\t\t\t\tdata.result = await self.eval(code)\n\t\t\t\t\tpostMessage(JSON.stringify(data))\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tconsole.error('WebWorkerRunner error:', ex, '\\r\\ncode: ', code)\n\t\t\t\t\tdata.error = ex.stack || ex.toString()\n\t\t\t\t\tpostMessage(JSON.stringify(data))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* eslint-disable */\n\t\t// use: https://babeljs.io/en/repl.html#?babili=false&browsers=&build=&builtIns=false&spec=false&loose=false&code_lz=PYOwtgpgzlCGDmEAEBeJsoE8QGMkDMBXXAFwEtQkAKCASiQG8AoJVpHUKEpSGBCAJIATVEggA6IbBKwA2gAYAuizYcQXdsCHI0EqTNkBGZWyQkATpkYrTrAPR2xUADZkQJALRCycAEbOIDxAIAA9PV2CkEGAPCAA3WGcbWzUNc2hCZ240WAB3WDJuWQByeMTixSoObVpk0wAHYC4AWWg4RCpedsEhABoozOd-9KhM7gB-JBGx8RJgAGULN3gqegAuKYys2tMAX3ZpHAALalD6Zls2Rpa2_k7bxGF-0PEuWBwAayQAH2-xENmCyWIBWtH6IEGOzYuyYMKAA&debug=false&forceAllTransforms=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=es2015%2Creact%2Cstage-2%2Cenv&prettier=false&targets=&version=7.3.4\n\t\t// and: https://xem.github.io/terser-online/\n\t\tfunction workerCodeBabelify() {\n\t\t\tonmessage = function onmessage(_ref) {\n\t\t\t\tvar data, code;\n\t\t\t\treturn Promise.resolve().then(function () {\n\t\t\t\t\tdata = _ref.data;\n\t\t\t\t\tcode = data.code;\n\t\t\t\t\tdelete data.code;\n\t\t\t\t\treturn Promise.resolve().then(function () {\n\t\t\t\t\t\treturn self.eval(code);\n\t\t\t\t\t}).then(function (_resp) {\n\t\t\t\t\t\tdata.result = _resp;\n\t\t\t\t\t\tpostMessage(JSON.stringify(data));\n\t\t\t\t\t}).catch(function (ex) {\n\t\t\t\t\t\tconsole.error('WebWorkerRunner error:', ex, '\\r\\ncode: ', code)\n\t\t\t\t\t\tdata.error = ex.stack || ex.toString();\n\t\t\t\t\t\tpostMessage(JSON.stringify(data));\n\t\t\t\t\t});\n\t\t\t\t}).then(function () {});\n\t\t\t};\n\t\t}\n\t\t/* eslint-enable */\n\n\t\tconst blob = new Blob([`(${workerCodeBabelify.toString()})();`], {type: 'application/javascript'})\n\t\tconst worker = new Worker(URL.createObjectURL(blob))\n\n\t\tfunction createOutsidePromise() {\n\t\t\tlet promiseResolve\n\t\t\tlet promiseReject\n\t\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve\n\t\t\t\tpromiseReject = reject\n\t\t\t})\n\t\t\tpromise.resolve = promiseResolve\n\t\t\tpromise.reject = promiseReject\n\t\t\treturn promise\n\t\t}\n\n\t\tlet nextMessageId = 0\n\t\tconst requests = {}\n\n\t\tthis.run = run\n\t\tfunction run(codeOrFunc) {\n\t\t\tif (!codeOrFunc) {\n\t\t\t\tthrow new Error('Argument func is empty')\n\t\t\t}\n\n\t\t\tconst messageId = nextMessageId++\n\t\t\tconst request = createOutsidePromise()\n\t\t\trequests[messageId] = request\n\n\t\t\tworker.postMessage({\n\t\t\t\tmessageId,\n\t\t\t\tcode: typeof codeOrFunc === 'function'\n\t\t\t\t\t? `(${codeOrFunc.toString()})();`\n\t\t\t\t\t: `${codeOrFunc}`\n\t\t\t})\n\n\t\t\treturn request\n\t\t}\n\n\t\tfunction emitResult({messageId, error, result}) {\n\t\t\tconst request = requests[messageId]\n\t\t\tif (!request) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdelete requests[messageId]\n\t\t\tif (error) {\n\t\t\t\trequest.reject(error)\n\t\t\t} else {\n\t\t\t\trequest.resolve(result)\n\t\t\t}\n\t\t}\n\n\t\tworker.onmessage = function (e) {\n\t\t\temitResult(JSON.parse(e.data))\n\t\t}\n\n\t\tworker.onerror = function (e) {\n\t\t\tfor (const messageId in requests) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(requests, messageId)) {\n\t\t\t\t\temitResult({\n\t\t\t\t\t\tmessageId,\n\t\t\t\t\t\terror: e\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default {\n\tWebWorkerRunner\n}\n","var arrayNotationPattern = /\\[\\s*(\\d+)\\s*\\]/g;\nfunction makeArrayMethod(name) {\n    return function (keypath) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var parts = keypath.replace(arrayNotationPattern, '.$1').split('.');\n        var key = parts.shift();\n        var value = this.get()[key];\n        var array = value;\n        while (parts.length)\n            array = array[parts.shift()];\n        var result = array[name].apply(array, args);\n        this.set((_a = {}, _a[key] = value, _a));\n        return result;\n        var _a;\n    };\n}\nvar push = makeArrayMethod('push');\nvar pop = makeArrayMethod('pop');\nvar shift = makeArrayMethod('shift');\nvar unshift = makeArrayMethod('unshift');\nvar splice = makeArrayMethod('splice');\nvar sort = makeArrayMethod('sort');\nvar reverse = makeArrayMethod('reverse');\n\nfunction isDate(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nvar scheduler = {\n    components: [],\n    running: false,\n    add: function (component) {\n        if (~scheduler.components.indexOf(component))\n            return;\n        scheduler.components.push(component);\n        if (!scheduler.running) {\n            scheduler.running = true;\n            requestAnimationFrame(scheduler.next);\n        }\n    },\n    next: function () {\n        var now = window.performance.now();\n        var hasComponents = false;\n        var i = scheduler.components.length;\n        while (i--) {\n            var component = scheduler.components[i];\n            var data = {};\n            var hasTweens = false;\n            for (var key in component._currentTweens) {\n                var t = component._currentTweens[key];\n                if (now >= t.end) {\n                    data[key] = t.to;\n                    delete component._currentTweens[key];\n                    t.fulfil();\n                }\n                else {\n                    hasTweens = true;\n                    hasComponents = true;\n                    if (now >= t.start) {\n                        var p = (now - t.start) / t.duration;\n                        data[key] = t.value(t.ease(p));\n                    }\n                }\n            }\n            component._tweening = true;\n            component.set(data);\n            component._tweening = false;\n            if (!hasTweens)\n                scheduler.components.splice(i, 1);\n        }\n        if (hasComponents) {\n            requestAnimationFrame(scheduler.next);\n        }\n        else {\n            scheduler.running = false;\n        }\n    }\n};\nfunction snap(to) {\n    return function () { return to; };\n}\nfunction interpolate(a, b) {\n    if (a === b || a !== a)\n        return snap(a);\n    var type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        var arr_1 = b.map(function (bi, i) {\n            return interpolate(a[i], bi);\n        });\n        return function (t) {\n            return arr_1.map(function (fn) { return fn(t); });\n        };\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (isDate(a) && isDate(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            var delta_1 = b - a;\n            return function (t) {\n                return new Date(a + t * delta_1);\n            };\n        }\n        var keys_1 = Object.keys(b);\n        var interpolators_1 = {};\n        var result_1 = {};\n        keys_1.forEach(function (key) {\n            interpolators_1[key] = interpolate(a[key], b[key]);\n        });\n        return function (t) {\n            keys_1.forEach(function (key) {\n                result_1[key] = interpolators_1[key](t);\n            });\n            return result_1;\n        };\n    }\n    if (type === 'number') {\n        var delta_2 = b - a;\n        return function (t) {\n            return a + t * delta_2;\n        };\n    }\n    throw new Error(\"Cannot interpolate \" + type + \" values\");\n}\nfunction linear(x) {\n    return x;\n}\nfunction tween(key, to, options) {\n    var _this = this;\n    if (options === void 0) { options = {}; }\n    if (!this._currentTweens) {\n        this._currentTweens = Object.create(null);\n        this._tweening = false;\n        var set_1 = this.set;\n        this.set = function (data) {\n            if (!_this._tweening) {\n                for (var key_1 in data) {\n                    if (_this._currentTweens[key_1])\n                        _this._currentTweens[key_1].abort();\n                }\n            }\n            set_1.call(_this, data);\n        };\n    }\n    if (this._currentTweens[key])\n        this._currentTweens[key].abort();\n    var start = window.performance.now() + (options.delay || 0);\n    var duration = options.duration || 400;\n    var end = start + duration;\n    var t = {\n        key: key,\n        value: (options.interpolate || interpolate)(this.get()[key], to),\n        to: to,\n        start: start,\n        end: end,\n        duration: duration,\n        ease: options.easing || linear,\n        running: true,\n        abort: function () {\n            t.running = false;\n            delete _this._currentTweens[key];\n        }\n    };\n    this._currentTweens[key] = t;\n    scheduler.add(this);\n    var promise = new Promise(function (fulfil) {\n        t.fulfil = fulfil;\n    });\n    promise.abort = t.abort;\n    return promise;\n}\n\nfunction observe(key, callback, opts) {\n    var fn = callback.bind(this);\n    if (!opts || opts.init !== false) {\n        fn(this.get()[key]);\n    }\n    return this.on(opts && opts.defer ? 'update' : 'state', function (_a) {\n        var changed = _a.changed, current = _a.current, previous = _a.previous;\n        if (changed[key])\n            fn(current[key], previous && previous[key]);\n    });\n}\n\nfunction getNestedValue(obj, parts) {\n    for (var i = 0; i < parts.length; i += 1) {\n        if (!obj)\n            return undefined;\n        obj = obj[parts[i]];\n    }\n    return obj;\n}\nfunction observeDeep(keypath, callback, opts) {\n    var parts = keypath.replace(/\\[(\\d+)\\]/g, '.$1').split('.');\n    var key = parts[0];\n    var fn = callback.bind(this);\n    var last = getNestedValue(this.get(), parts);\n    if (!opts || opts.init !== false)\n        fn(last);\n    return this.on(opts && opts.defer ? 'update' : 'state', function (_a) {\n        var changed = _a.changed, current = _a.current, previous = _a.previous;\n        if (changed[key]) {\n            var value = getNestedValue(current, parts);\n            if (value !== last ||\n                typeof value === 'object' ||\n                typeof value === 'function') {\n                fn(value, last);\n                last = value;\n            }\n        }\n    });\n}\n\nfunction observeMany(keys, callback, opts) {\n    var fn = callback.bind(this);\n    if (!opts || opts.init !== false) {\n        var state_1 = this.get();\n        fn(keys.map(function (key) { return state_1[key]; }), keys.map(function (key) { return undefined; }));\n    }\n    return this.on(opts && opts.defer ? 'update' : 'state', function (_a) {\n        var changed = _a.changed, current = _a.current, previous = _a.previous;\n        if (!previous)\n            return; // prevent double-firing if observing in oncreate\n        var i = keys.length;\n        while (i--) {\n            if (changed[keys[i]]) {\n                fn(keys.map(function (key) { return current[key]; }), keys.map(function (key) { return previous[key]; }));\n                return;\n            }\n        }\n    });\n}\n\nfunction getDeep(keypath) {\n    if (keypath === undefined) {\n        return this.get();\n    }\n    var keys = keypath.replace(/\\[(\\d+)\\]/g, '.$1').split('.');\n    var value = this.get()[keys[0]];\n    for (var i = 1; i < keys.length; i++) {\n        value = value[keys[i]];\n    }\n    return value;\n}\nfunction setDeep(keypath, value) {\n    if (keypath === undefined) {\n        return;\n    }\n    var keys = keypath.replace(/\\[(\\d+)\\]/g, '.$1').split('.');\n    var lastKey = keys.pop();\n    // If not a nested keypath\n    if (keys[0] === undefined) {\n        var data_1 = {};\n        data_1[lastKey] = value;\n        this.set(data_1);\n        return;\n    }\n    var object = this.get()[keys[0]];\n    for (var i = 1; i < keys.length; i++) {\n        object = object[keys[i]];\n    }\n    object[lastKey] = value;\n    var data = {};\n    data[keys[0]] = this.get()[keys[0]];\n    this.set(data);\n}\n\nvar scheduler$1 = {\n    components: [],\n    running: false,\n    add: function (component) {\n        if (~scheduler$1.components.indexOf(component))\n            return;\n        scheduler$1.components.push(component);\n        if (!scheduler$1.running) {\n            scheduler$1.running = true;\n            requestAnimationFrame(scheduler$1.next);\n        }\n    },\n    next: function () {\n        var hasComponents = false;\n        var i = scheduler$1.components.length;\n        while (i--) {\n            var component = scheduler$1.components[i];\n            var data = {};\n            var hasSprings = false;\n            for (var key in component._springs) {\n                var spring_1 = component._springs[key];\n                if (spring_1.tick(data)) {\n                    hasSprings = true;\n                    hasComponents = true;\n                }\n                else {\n                    component._springCallbacks[key]();\n                    delete component._springs[key];\n                    delete component._springCallbacks[key];\n                }\n            }\n            component._springing = true;\n            component.set(data);\n            component._springing = false;\n            if (!hasSprings)\n                scheduler$1.components.splice(i, 1);\n        }\n        if (hasComponents) {\n            requestAnimationFrame(scheduler$1.next);\n        }\n        else {\n            scheduler$1.running = false;\n        }\n    }\n};\nfunction snap$1(key, a, b, options) {\n    return {\n        key: key,\n        tick: function (object) {\n            object[key] = b;\n            return false;\n        },\n        update: function (object, options) {\n            b = object;\n        }\n    };\n}\nfunction number(key, a, b, options) {\n    var velocity = 0;\n    var stiffness = options.stiffness, damping = options.damping;\n    var valueThreshold = Math.abs(b - a) * 0.001;\n    var velocityThreshold = valueThreshold; // TODO is this right?\n    return {\n        key: key,\n        tick: function (object) {\n            var d = b - a;\n            var spring = stiffness * d;\n            var damper = damping * velocity;\n            var acceleration = spring - damper;\n            velocity += acceleration;\n            a += velocity;\n            object[key] = a;\n            if (velocity < velocityThreshold && Math.abs(b - a) < valueThreshold) {\n                object[key] = b;\n                return false;\n            }\n            object[key] = a;\n            return true;\n        },\n        update: function (object, options) {\n            checkCompatibility(object, b);\n            b = object;\n            stiffness = options.stiffness;\n            damping = options.damping;\n        }\n    };\n}\nfunction date(key, a, b, options) {\n    var dummy = {};\n    var subspring = number(key, a.getTime(), b.getTime(), options);\n    return {\n        key: key,\n        tick: function (object) {\n            if (!subspring.tick(dummy)) {\n                object[key] = b;\n                return false;\n            }\n            object[key] = new Date(dummy[key]);\n            return true;\n        },\n        update: function (object, options) {\n            checkCompatibility(object, b);\n            subspring.update(object.getTime(), options);\n            b = object;\n        }\n    };\n}\nfunction array(key, a, b, options) {\n    var value = [];\n    var subsprings = [];\n    for (var i = 0; i < a.length; i += 1) {\n        subsprings.push(getSpring(i, a[i], b[i], options));\n    }\n    return {\n        key: key,\n        tick: function (object) {\n            var active = false;\n            for (var i = 0; i < subsprings.length; i += 1) {\n                if (subsprings[i].tick(value))\n                    active = true;\n            }\n            if (!active) {\n                object[key] = b;\n                return false;\n            }\n            object[key] = value;\n            return true;\n        },\n        update: function (object, options) {\n            checkCompatibility(object, b);\n            for (var i = 0; i < object.length; i += 1) {\n                subsprings[i].update(object[i], options);\n            }\n            b = object;\n        }\n    };\n}\nfunction object(key, a, b, options) {\n    var value = {};\n    var subsprings = [];\n    for (var k in a) {\n        subsprings.push(getSpring(k, a[k], b[k], options));\n    }\n    return {\n        key: key,\n        tick: function (object) {\n            var active = false;\n            for (var i = 0; i < subsprings.length; i += 1) {\n                if (subsprings[i].tick(value))\n                    active = true;\n            }\n            if (!active) {\n                object[key] = b;\n                return false;\n            }\n            object[key] = value;\n            return true;\n        },\n        update: function (object, options) {\n            checkCompatibility(object, b);\n            for (var i = 0; i < subsprings.length; i += 1) {\n                subsprings[i].update(object[subsprings[i].key], options);\n            }\n            b = object;\n        }\n    };\n}\nfunction checkCompatibility(a, b) {\n    var type = typeof a;\n    if (type !== typeof b ||\n        Array.isArray(a) !== Array.isArray(b) ||\n        isDate(a) !== isDate(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (Array.isArray(a)) {\n            if (a.length !== b.length) {\n                throw new Error('Cannot interpolate arrays of different length');\n            }\n        }\n        else {\n            if (!keysMatch(a, b))\n                throw new Error('Cannot interpolate differently-shaped objects');\n        }\n    }\n    else if (type !== 'number') {\n        throw new Error(\"Cannot interpolate \" + type + \" values\");\n    }\n}\nfunction getSpring(key, a, b, options) {\n    if (a === b || a !== a)\n        return snap$1(key, a, b, options);\n    checkCompatibility(a, b);\n    if (typeof a === 'object') {\n        if (Array.isArray(a)) {\n            return array(key, a, b, options);\n        }\n        if (isDate(a)) {\n            return date(key, a, b, options);\n        }\n        return object(key, a, b, options);\n    }\n    return number(key, a, b, options);\n}\nfunction spring(key, to, options) {\n    var _this = this;\n    if (!this._springs) {\n        this._springs = Object.create(null);\n        this._springCallbacks = Object.create(null);\n        this._springing = false;\n        var set_1 = this.set;\n        this.set = function (data) {\n            if (!_this._springing) {\n                for (var key_1 in data) {\n                    delete _this._springs[key_1];\n                }\n            }\n            set_1.call(_this, data);\n        };\n    }\n    if (this._springs[key]) {\n        this._springs[key].update(to, options);\n    }\n    else {\n        var spring_2 = getSpring(key, this.get()[key], to, options);\n        this._springs[key] = spring_2;\n    }\n    var promise = new Promise(function (fulfil) {\n        _this._springCallbacks[key] = fulfil;\n    });\n    scheduler$1.add(this);\n    return promise;\n}\nfunction keysMatch(a, b) {\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length)\n        return false;\n    for (var i = 0; i < aKeys.length; i += 1) {\n        if (!(aKeys[i] in b))\n            return false;\n    }\n    return true;\n}\n\nexport { push, pop, shift, unshift, splice, sort, reverse, tween, observe, observeDeep, observeMany, getDeep, setDeep, spring };\n","<table class=\"editor\">\n\t<thead>\n\t<tr>\n\t\t<th>JS</th>\n\t\t<th>\n\t\t\t<span>CSS&nbsp;&nbsp;&nbsp;</span>\n\t\t\t<span><label><input type=\"checkbox\" bind:checked=\"plugins.nested\">un nested</label></span>\n\t\t\t<span><label><input type=\"checkbox\" bind:checked=\"plugins.nano\">optimized</label></span>\n\t\t\t<span><label><input type=\"checkbox\" bind:checked=\"plugins.beautify\">beautify</label></span>\n\t\t</th>\n\t</tr>\n\t</thead>\n\t<tbody>\n\t<tr>\n\t\t<td class=\"js\">\n\t\t\t<CodeMirror bind:code=\"js\"/>\n\t\t</td>\n\t\t<td class=\"css\">\n\t\t\t<CodeMirror bind:code=\"css\"/>\n\t\t</td>\n\t</tr>\n\t</tbody>\n</table>\n\n<script>\n\timport JSON5 from 'json5'\n\timport {WebWorkerRunner} from '../main/browser/helpers/web-worker-runner'\n\n\tfunction createConverter() {\n\t\t// eslint-disable-next-line no-undef\n\t\tif (typeof window === 'undefined') {\n\t\t\t// Mock for server side\n\t\t\treturn {\n\t\t\t\tcssToJs: o => o,\n\t\t\t\tjsToCss: o => o,\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line no-undef\n\t\tconst {postcss} = window\n\n\t\tconst webWorkerRunner = new WebWorkerRunner()\n\n\t\tconst postcssPlugins = {\n\t\t\tnested: postcss.plugins.nested(),\n\t\t\tnano  : postcss.plugins.nano({\n\t\t\t\tpreset: [\n\t\t\t\t\t'default', {\n\t\t\t\t\t\tdiscardComments: {\n\t\t\t\t\t\t\tremoveAll: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t}),\n\t\t\tbeautify: postcss.plugins.beautify(),\n\t\t}\n\n\t\treturn {\n\t\t\tcssToJs,\n\t\t\tjsToCss\n\t\t}\n\n\t\tfunction cssToJs(css) {\n\t\t\ttry {\n\t\t\t\tlet js = postcss().process(css, {\n\t\t\t\t\tstringifier: postcss.syntaxes.js.stringify\n\t\t\t\t}).css\n\n\t\t\t\tjs = JSON5.stringify(JSON.parse(js), null, 4)\n\n\t\t\t\treturn `;(${js})`\n\t\t\t} catch (ex) {\n\t\t\t\treturn ex.toString()\n\t\t\t}\n\t\t}\n\n\t\tasync function jsToCss(js, plugins) {\n\t\t\tlet jsObject\n\t\t\ttry {\n\t\t\t\tjsObject = await webWorkerRunner.run(js)\n\t\t\t\tconst result = await postcss(Object.keys(plugins)\n\t\t\t\t\t.filter(o => plugins[o])\n\t\t\t\t\t.map(o => postcssPlugins[o])\n\t\t\t\t\t.filter(o => o))\n\t\t\t\t\t.process(js, {\n\t\t\t\t\t\tparser           : postcss.syntaxes.js.parse,\n\t\t\t\t\t\trequireFromString: () => jsObject\n\t\t\t\t\t})\n\n\t\t\t\treturn result.css\n\t\t\t} catch (ex) {\n\t\t\t\treturn `js = ${jsObject}\\r\\n\\r\\n============================\\r\\nPostcss Error:\\r\\n${ex.toString()}`\n\t\t\t}\n\t\t}\n\t}\n\n\tconst converter = createConverter()\n\n\texport default {\n\t\tdata() {\n\t\t\tlet data\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tdata = JSON.parse(localStorage.getItem('JsCssConverter'))\n\t\t\t}\n\n\t\t\tif (!data) {\n\t\t\t\tdata = {\n\t\t\t\t\tjs: `[\n    '@at-rule-wiwhout-params',\n    '@at-rule with params',\n    '@at-rule (with params)',\n    '// comment',\n    {\n        '.selector1': {\n            color: '#0f0',\n        },\n        '.selector2': {\n            color: '#0f0',\n        },\n    },\n    '// another comment',\n    {\n        '@at-rule (with params)': {\n            'and-content': 'value',\n        },\n        '.selector3': {\n            color: '#0f0',\n            '.sub-selector': {\n                content: '\"quotes is required for this CSS property\"',\n            },\n        },\n    },\n]`,\n\t\t\t\t\tcss: `\n@at-rule-wiwhout-params;\n@at-rule with params;\n@at-rule (with params);\n/* comment */\n.selector1 {\n\tcolor: #0f0\n}\n.selector2 {\n\tcolor: #0f0\n}\n/* another comment */\n@at-rule (with params) {\n\tand-content: value\n}\n.selector3 {\n\tcolor: #0f0;\n\t.sub-selector {\n\t\tcontent: \"quotes is required for this CSS property\"\n\t}\n}\n`,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!data.plugins) {\n\t\t\t\tdata.plugins = {\n\t\t\t\t\tnested  : false,\n\t\t\t\t\tnano    : true,\n\t\t\t\t\tbeautify: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data\n\t\t},\n\t\tasync onstate({changed, current, previous}) {\n\t\t\tif (!this.converting) {\n\t\t\t\tthis.converting = true\n\t\t\t\ttry {\n\t\t\t\t\tif (changed.js || changed.plugins) {\n\t\t\t\t\t\tthis.set({css: await converter.jsToCss(this.get().js, this.get().plugins)})\n\t\t\t\t\t} else if (changed.css) {\n\t\t\t\t\t\tthis.set({js: converter.cssToJs(this.get().css)})\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\tlocalStorage.setItem('JsCssConverter', JSON.stringify(this.get()))\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tthis.converting = false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\toncreate() {\n\n\t\t},\n\n\t\tcomponents: {\n\t\t\tCodeMirror: './CodeMirror.svelte'\n\t\t}\n\t}\n</script>\n\n<style>\n\t.editor {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttable-layout: fixed;\n\t\tborder-spacing: 0.3em;\n\t\tpadding: 0;\n\t}\n\n\t.editor td {\n\t\tposition: relative;\n\t\tpadding: 0;\n\t\toverflow: hidden;\n\t\tborder: solid black 1px;\n\t}\n\n\t:global(.CodeMirror)\n\t{\n\t\t/*font-family: \"Segoe UI Symbol\", \"Helvetica Neue\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";*/\n\t\tfont-family: \"SFMono-Regular\",Consolas,\"Liberation Mono\",Menlo,Courier,monospace;\n\t\theight: auto !important;\n\t}\n\n\t/*:global(.CodeMirror-scroll) {*/\n\t\t/*max-height: 400px;*/\n\t/*}*/\n</style>"],"names":["source","parseState","stack","pos","line","column","token","key","root","lexState","buffer","doubleQuote","sign","c","isSpaceSeparator","unicode","Space_Separator","test","isIdStartChar","ID_Start","isIdContinueChar","ID_Continue","isDigit","isHexDigit","lex","peek","lexStates","String","fromCodePoint","codePointAt","read","length","default","undefined","newToken","util","comment","invalidChar","multiLineComment","multiLineCommentAsterisk","singleLineComment","value","literal","Infinity","NaN","identifierNameStartEscape","u","unicodeEscape","invalidIdentifier","identifierName","identifierNameEscape","zero","decimalInteger","Number","decimalPointLeading","decimalPoint","decimalFraction","decimalExponent","decimalExponentSign","decimalExponentInteger","hexadecimal","hexadecimalInteger","string","parseInt","hexEscape","escape","console","warn","formatChar","separatorChar","start","beforePropertyName","afterPropertyName","beforePropertyValue","afterPropertyValue","beforeArrayValue","afterArrayValue","end","type","s","count","parseStates","invalidEOF","push","pop","parent","Array","isArray","_typeof","current","syntaxError","replacements","hexString","charCodeAt","toString","substring","message","err","SyntaxError","lineNumber","columnNumber","parse","text","reviver","internalize","holder","name","replacement","call","stringify","replacer","space","propertyList","replacerFunc","quote","indent","gap","v","item","indexOf","Math","min","floor","substr","serializeProperty","toJSON5","toJSON","Boolean","valueOf","quoteString","TypeError","stepback","final","partial","i","propertyString","properties","join","separator","serializeArray","keys","Object","member","serializeKey","serializeObject","quotes","product","quoteChar","reduce","a","b","replace","RegExp","firstChar","codemirrorPromise","instance","Constructor","WebWorkerRunner","blob","Blob","onmessage","_ref","data","code","Promise","resolve","then","self","eval","_resp","result","postMessage","JSON","catch","ex","error","worker","Worker","URL","createObjectURL","nextMessageId","requests","emitResult","messageId","request","reject","run","codeOrFunc","Error","promise","promiseResolve","promiseReject","e","onerror","prototype","hasOwnProperty","createEditor","CodeMirror","mode","editor","lineNumbers","lineWrapping","indentWithTabs","indentUnit","tabSize","json","handlebars","on","_this","updating","resize","callback","opts","fn","bind","this","init","get","defer","_a","changed","previous","warningCount","loc","filename","fire","marker","defaults","smartIndent","keyMap","_this2","observe","set","errorLine","ch","previousLine","removeLineClass","toTextArea","converter","window","cssToJs","o","jsToCss","postcss","webWorkerRunner","postcssPlugins","nested","plugins","nano","preset","discardComments","removeAll","beautify","css","js","process","stringifier","syntaxes","JSON5","jsObject","filter","map","parser","requireFromString","_context","createConverter","converting","localStorage","setItem","getItem"],"mappings":"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"}