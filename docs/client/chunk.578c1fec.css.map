{
  "version": 3,
  "file": "chunk.578c1fec.css",
  "sources": [
    "..\\..\\..\\..\\..\\..\\src\\components\\CodeMirror.svelte",
    "..\\..\\..\\..\\..\\..\\src\\components\\JsCssConverter.svelte",
    "..\\..\\..\\..\\..\\..\\src\\routes\\index.html"
  ],
  "sourcesContent": [
    "{#await codemirrorPromise}\n\t<p class='loading'>loading editor...</p>\n{:then _}\n\t<div class='codemirror-container'>\n\t\t<textarea ref:editor></textarea>\n\n\t\t{#if error}\n\t\t\t<p class='error message'>\n\t\t\t\t{#if error.loc}\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t{#if error.filename}\n\t\t\t\t\t\t\t<span class='filename' on:click='fire(\"navigate\", error.filename)'>{error.filename}</span>\n\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t({error.loc.line}:{error.loc.column})\n\t\t\t\t\t</strong>\n\t\t\t\t{/if}\n\n\t\t\t\t{error.message}\n\t\t\t</p>\n\t\t{:elseif warningCount > 0}\n\t\t\t<p class='warning message'>\n\t\t\t\tCompiled, but with {warningCount} {warningCount === 1 ? 'warning' : 'warnings'} â€” check the console for details\n\t\t\t</p>\n\t\t{/if}\n\t</div>\n{:catch err}\n\t<p class='error'>error loading CodeMirror</p>\n{/await}\n\n<style>\n\t.codemirror-container {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\n\t\tborder-top: 1px solid #ccc;\n\t\tborder-bottom: 1px solid #ccc;\n\t\tmargin: 0 0 1em 0;\n\t}\n\n\t.codemirror-container :global(.CodeMirror) {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\n\t\tborder-radius: 3px;\n\t\tfont-family: Inconsolata, monospace;\n\t\tfont-size: 16px;\n\t\tline-height: 1.2;\n\t\tfont-weight: 400;\n\t\tcolor: #333;\n\t\theight: auto;\n\t\tmin-height: 60px;\n\t}\n\n\t.codemirror-container :global(.CodeMirror-gutters) {\n\t\tborder-right: 1px solid #eee;\n\t}\n\n\ttextarea {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\n\t\tborder: none;\n\t}\n\n\t.codemirror-container .message {\n\t\tbottom: 1em;\n\t\tleft: 1em;\n\t\tposition: absolute;\n\t\tz-index: 20;\n\t}\n\n\t.codemirror-container :global(.error-loc) {\n\t\tposition: relative;\n\t\tborder-bottom: 2px solid rgb(200,0,0);\n\t}\n\n\t.codemirror-container :global(.error-line) {\n\t\tbackground-color: rgba(200,0,0,0.05);\n\t}\n\n\t.loading, .error {\n\t\ttext-align: center;\n\t\tcolor: #999;\n\t\tfont-weight: 300;\n\t\tmargin: 2em 0 0 0;\n\t}\n\r\n\n/*# sourceMappingURL=CodeMirror.svelte.css.map */</style>\n\n<script>\n\timport {observe} from 'svelte-extras'\n\n\tlet codemirrorPromise\n\n\tfunction loadCodemirror() {\n\t\treturn import('./_codemirror.js')\n\t\t\t.then(m => m.default)\n\t}\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcodemirrorPromise: true\n\t\t\t\t\t? codemirrorPromise || (codemirrorPromise = loadCodemirror())\n\t\t\t\t\t: null\n\t\t\t}\n\t\t},\n\n\t\toncreate() {\n\t\t\tcodemirrorPromise.then(CodeMirror => {\n\t\t\t\tCodeMirror.defaults.smartIndent = false\n\t\t\t\tCodeMirror.keyMap.default['Shift-Tab'] = 'indentLess'\n\t\t\t\tCodeMirror.keyMap.default.Tab = 'indentMore'\n\n\t\t\t\tthis.updating = false\n\n\t\t\t\tthis.observe('mode', () => {\n\t\t\t\t\tthis.createEditor(CodeMirror)\n\t\t\t\t})\n\t\t\t\tthis.observe('code', code => {\n\t\t\t\t\tif (!this.updating && code != null) {\n\t\t\t\t\t\tthis.updating = true\n\t\t\t\t\t\tthis.editor.setValue(code)\n\t\t\t\t\t\tthis.updating = false\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet marker\n\t\t\t\tthis.observe('errorLoc', loc => {\n\t\t\t\t\tif (marker) {\n\t\t\t\t\t\tmarker.clear()\n\t\t\t\t\t}\n\n\t\t\t\t\tif (loc == null) {\n\t\t\t\t\t\tthis.set({errorLine: null})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst line = loc.line - 1\n\t\t\t\t\t\tconst ch = loc.column\n\n\t\t\t\t\t\tmarker = this.editor.markText({line,\n\t\t\t\t\t\t\tch}, {line,\n\t\t\t\t\t\t\tch: ch + 1}, {\n\t\t\t\t\t\t\tclassName: 'error-loc'\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis.set({errorLine: line})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis.observe('errorLine', (line, previousLine) => {\n\t\t\t\t\tif (previousLine != null) {\n\t\t\t\t\t\tthis.editor.removeLineClass(previousLine, 'wrap', 'error-line')\n\t\t\t\t\t}\n\t\t\t\t\tif (line != null) {\n\t\t\t\t\t\tthis.editor.addLineClass(line, 'wrap', 'error-line')\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis.on('destroy', () => {\n\t\t\t\t\tthis.editor.toTextArea()\n\t\t\t\t})\n\t\t\t\tthis.editor.refresh()\n\t\t\t})\n\t\t},\n\n\t\tmethods: {\n\t\t\tcreateEditor(CodeMirror) {\n\t\t\t\tif (this.editor) {\n\t\t\t\t\tthis.editor.toTextArea()\n\t\t\t\t}\n\n\t\t\t\tconst {mode, code, readonly} = this.get()\n\n\t\t\t\tconst modes = {\n\t\t\t\t\tjson: {\n\t\t\t\t\t\tname: 'javascript',\n\t\t\t\t\t\tjson: true\n\t\t\t\t\t},\n\t\t\t\t\thandlebars: {\n\t\t\t\t\t\tname: 'handlebars',\n\t\t\t\t\t\tbase: 'text/html'\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.editor = CodeMirror.fromTextArea(this.refs.editor, {\n\t\t\t\t\tlineNumbers   : true,\n\t\t\t\t\tlineWrapping  : true,\n\t\t\t\t\tindentWithTabs: true,\n\t\t\t\t\tvalue         : code,\n\t\t\t\t\tmode          : modes[mode] || {\n\t\t\t\t\t\tname: mode\n\t\t\t\t\t},\n\t\t\t\t\treadOnly: readonly\n\t\t\t\t})\n\n\t\t\t\tthis.editor.on('change', instance => {\n\t\t\t\t\tif (!this.updating) {\n\t\t\t\t\t\tthis.updating = true\n\t\t\t\t\t\tthis.set({code: instance.getValue()})\n\t\t\t\t\t\tthis.updating = false\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tresize() {\n\t\t\t\tthis.editor.refresh()\n\t\t\t},\n\n\t\t\tobserve\n\t\t}\n\t}\n</script>",
    "<table class=\"editor\">\n\t<thead>\n\t<tr>\n\t\t<th>JS</th>\n\t\t<th>\n\t\t\t<span>CSS&nbsp;&nbsp;&nbsp;</span>\n\t\t\t<span><label><input type=\"checkbox\" bind:checked=\"plugins.nested\">un nested</label></span>\n\t\t\t<span><label><input type=\"checkbox\" bind:checked=\"plugins.nano\">optimized</label></span>\n\t\t\t<span><label><input type=\"checkbox\" bind:checked=\"plugins.beautify\">beautify</label></span>\n\t\t</th>\n\t</tr>\n\t</thead>\n\t<tbody>\n\t<tr>\n\t\t<td class=\"js\">\n\t\t\t<CodeMirror bind:code=\"js\"/>\n\t\t</td>\n\t\t<td class=\"css\">\n\t\t\t<CodeMirror bind:code=\"css\"/>\n\t\t</td>\n\t</tr>\n\t</tbody>\n</table>\n\n<script>\n\timport JSON5 from 'json5'\n\timport {WebWorkerRunner} from '../main/browser/helpers/web-worker-runner'\n\n\tfunction createConverter() {\n\t\t// eslint-disable-next-line no-undef\n\t\tif (typeof window === 'undefined') {\n\t\t\t// Mock for server side\n\t\t\treturn {\n\t\t\t\tcssToJs: o => o,\n\t\t\t\tjsToCss: o => o,\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line no-undef\n\t\tconst {postcss} = window\n\n\t\tconst webWorkerRunner = new WebWorkerRunner()\n\n\t\tconst postcssPlugins = {\n\t\t\tnested: postcss.plugins.nested(),\n\t\t\tnano  : postcss.plugins.nano({\n\t\t\t\tpreset: [\n\t\t\t\t\t'default', {\n\t\t\t\t\t\tdiscardComments: {\n\t\t\t\t\t\t\tremoveAll: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t}),\n\t\t\tbeautify: postcss.plugins.beautify({\n\t\t\t\tcascade         : false,\n\t\t\t\tindentChar      : '\\t',\n\t\t\t\tindentSize      : 1,\n\t\t\t\ttrimLeadingZero : false,\n\t\t\t\tzeroLengthNoUnit: true\n\t\t\t}),\n\t\t}\n\n\t\treturn {\n\t\t\tcssToJs,\n\t\t\tjsToCss\n\t\t}\n\n\t\tfunction cssToJs(css) {\n\t\t\ttry {\n\t\t\t\tlet js = postcss().process(css, {\n\t\t\t\t\tstringifier: postcss.syntaxes.js.stringify\n\t\t\t\t}).css\n\n\t\t\t\tjs = JSON5\n\t\t\t\t\t.stringify(JSON.parse(js), {\n\t\t\t\t\t\tspace: '\\t',\n\t\t\t\t\t\tquote: '`'\n\t\t\t\t\t})\n\t\t\t\t\t.replace(/`([^`]*)`(\\s*:)/gs, (...match) => {\n\t\t\t\t\t\treturn `'${match[1].replace(/'/g, '\\\\\\'')}'${match[2]}`\n\t\t\t\t\t})\n\n\t\t\t\treturn `;(${js})`\n\t\t\t} catch (ex) {\n\t\t\t\treturn ex.toString()\n\t\t\t}\n\t\t}\n\n\t\tasync function jsToCss(js, plugins) {\n\t\t\tlet jsObject\n\t\t\ttry {\n\t\t\t\tjsObject = await webWorkerRunner.run(js)\n\t\t\t\tconst result = await postcss(Object.keys(plugins)\n\t\t\t\t\t.filter(o => plugins[o])\n\t\t\t\t\t.map(o => postcssPlugins[o])\n\t\t\t\t\t.filter(o => o))\n\t\t\t\t\t.process(js, {\n\t\t\t\t\t\tparser           : postcss.syntaxes.js.parse,\n\t\t\t\t\t\trequireFromString: () => jsObject\n\t\t\t\t\t})\n\n\t\t\t\treturn result.css\n\t\t\t} catch (ex) {\n\t\t\t\treturn `js = ${jsObject}\\r\\n\\r\\n============================\\r\\nPostcss Error:\\r\\n${ex.toString()}`\n\t\t\t}\n\t\t}\n\t}\n\n\tconst converter = createConverter()\n\n\texport default {\n\t\tdata() {\n\t\t\tlet data\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tdata = JSON.parse(localStorage.getItem('JsCssConverter'))\n\t\t\t}\n\n\t\t\tif (!data) {\n\t\t\t\tdata = {\n\t\t\t\t\tjs: `[\n    '@at-rule-wiwhout-params',\n    '@at-rule with params',\n    '@at-rule (with params)',\n    '// comment',\n    {\n        '.selector1': {\n            color: '#0f0',\n        },\n        '.selector2': {\n            color: '#0f0',\n        },\n    },\n    '// another comment',\n    {\n        '@at-rule (with params)': {\n            'and-content': 'value',\n        },\n        '.selector3': {\n            color: '#0f0',\n            '.sub-selector': {\n                content: '\"quotes is required for this CSS property\"',\n            },\n        },\n    },\n]`,\n\t\t\t\t\tcss: `\n@at-rule-wiwhout-params;\n@at-rule with params;\n@at-rule (with params);\n/* comment */\n.selector1 {\n\tcolor: #0f0\n}\n.selector2 {\n\tcolor: #0f0\n}\n/* another comment */\n@at-rule (with params) {\n\tand-content: value\n}\n.selector3 {\n\tcolor: #0f0;\n\t.sub-selector {\n\t\tcontent: \"quotes is required for this CSS property\"\n\t}\n}\n`,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!data.plugins) {\n\t\t\t\tdata.plugins = {\n\t\t\t\t\tnested  : false,\n\t\t\t\t\tnano    : true,\n\t\t\t\t\tbeautify: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data\n\t\t},\n\t\tasync onstate({changed, current, previous}) {\n\t\t\tif (!this.converting) {\n\t\t\t\tif (this.converting == null) {\n\t\t\t\t\t// prevent calculate at start\n\t\t\t\t\tthis.converting = false\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.converting = true\n\t\t\t\t\tif (changed.js || changed.plugins) {\n\t\t\t\t\t\tthis.set({css: await converter.jsToCss(this.get().js, this.get().plugins)})\n\t\t\t\t\t} else if (changed.css) {\n\t\t\t\t\t\tthis.set({js: converter.cssToJs(this.get().css)})\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\tlocalStorage.setItem('JsCssConverter', JSON.stringify(this.get()))\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tthis.converting = false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\toncreate() {\n\n\t\t},\n\n\t\tcomponents: {\n\t\t\tCodeMirror: './CodeMirror.svelte'\n\t\t}\n\t}\n</script>\n\n<style>\n\t.editor {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttable-layout: fixed;\n\t\tborder-spacing: 0.3em;\n\t\tpadding: 0;\n\t}\n\n\t.editor tr {\n\t\theight: 100%;\n\t}\n\n\t.editor td {\n\t\tposition: relative;\n\t\tpadding: 0;\n\t\toverflow: hidden;\n\t\tborder: solid black 1px;\n\t}\n\n\t:global(.CodeMirror)\n\t{\n\t\t/*font-family: \"Segoe UI Symbol\", \"Helvetica Neue\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\";*/\n\t\tfont-family: \"SFMono-Regular\",Consolas,\"Liberation Mono\",Menlo,Courier,monospace;\n\t\theight: auto !important;\n\t}\n\n\t/*:global(.CodeMirror-scroll) {*/\n\t\t/*max-height: 400px;*/\n\t/*}*/\n\r\n\n/*# sourceMappingURL=JsCssConverter.svelte.css.map */</style>",
    "<svelte:head>\n\t<title>Postcss-Js-Syntax to CSS converter</title>\n</svelte:head>\n\n<JsCssConverter/>\n\n<script>\n\texport default {\n\t\tcomponents: {\n\t\t\tJsCssConverter: '../components/JsCssConverter.svelte'\n\t\t}\n\t}\n</script>\n\n<style>\n\n\r\n:global(.theme-dark) h1 {\n  color: #00f; }\n\n/*# sourceMappingURL=index.html.css.map */</style>"
  ],
  "names": [],
  "mappings": "AA+BC,qBAAqB,cAAC,CAAC,AACtB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CAER,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC1B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AAClB,CAAC,AAED,mCAAqB,CAAC,AAAQ,WAAW,AAAE,CAAC,AAC3C,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CAER,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,WAAW,CAAC,CAAC,SAAS,CACnC,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,AACjB,CAAC,AAED,mCAAqB,CAAC,AAAQ,mBAAmB,AAAE,CAAC,AACnD,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC7B,CAAC,AAED,QAAQ,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CAER,MAAM,CAAE,IAAI,AACb,CAAC,AAED,mCAAqB,CAAC,QAAQ,cAAC,CAAC,AAC/B,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,GAAG,CACT,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,EAAE,AACZ,CAAC,AAED,mCAAqB,CAAC,AAAQ,UAAU,AAAE,CAAC,AAC1C,QAAQ,CAAE,QAAQ,CAClB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,AACtC,CAAC,AAED,mCAAqB,CAAC,AAAQ,WAAW,AAAE,CAAC,AAC3C,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACrC,CAAC,AAED,sBAAQ,CAAE,MAAM,cAAC,CAAC,AACjB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAClB,CAAC;AC2HD,OAAO,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,KAAK,CACnB,cAAc,CAAE,KAAK,CACrB,OAAO,CAAE,CAAC,AACX,CAAC,AAED,qBAAO,CAAC,EAAE,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,AACb,CAAC,AAED,qBAAO,CAAC,EAAE,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,GAAG,AACxB,CAAC,AAEO,WAAW,AACnB,CAAC,AAEA,WAAW,CAAE,gBAAgB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAChF,MAAM,CAAE,IAAI,CAAC,UAAU,AACxB,CAAC;ACjOM,WAAW,AAAC,CAAC,EAAE,AAAC,CAAC,AACvB,KAAK,CAAE,IAAI,AAAE,CAAC"
}